'use strict';

// クラス
// オブジェクトのテンプレート化（値に応じた複数の同じ処理）
{
  class Post {
    constructor(text) { //初期化
      this.text = text; //インスタンスのプロパティがセットされる
      this.likeCount = 0;
    }

    show() { //投稿表示メソッド（インスタンス共通の処理）
      console.log(`${this.text} - ${this.likeCount}いいね`);
    }
  }

  const posts = [ //投稿内容
    
    //インスタンス（クラスから作られるオブジェクト）
    new Post('JavaScriptの勉強中…'), 
    new Post('プログラミング楽しい！'),
  ];

  // 使用
  posts[0].show();
  posts[1].show();
}

/*

ポイント：
"コンストラクタ"で初期化。
このクラスから作られるインスタンスをクラス内thisというキーワードで表現する。
thisでコンストラクタのプロパティを参照。
から受け取るデータに応じた参照（引数を渡すことも可）
newを使ってクラスのインスタンスにする。

デメリット：

メリット：
形が定まる。
処理の変更に強い。

思ったこと：
共通処理は全部これで実装したらいいのでは（安直）

*/
